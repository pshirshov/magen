[
  {
    "key": "left",
    "command": "-gitlens.key.left",
    "when": "gitlens:key:left"
  },
  {
    "key": "alt+left",
    "command": "-gitlens.key.alt+left",
    "when": "gitlens:key:alt+left"
  },
  {
    "key": "ctrl+left",
    "command": "-gitlens.key.ctrl+left",
    "when": "gitlens:key:ctrl+left"
  },
  {
    "key": "right",
    "command": "-gitlens.key.right",
    "when": "gitlens:key:right"
  },
  {
    "key": "alt+right",
    "command": "-gitlens.key.alt+right",
    "when": "gitlens:key:alt+right"
  },
  {
    "key": "ctrl+right",
    "command": "-gitlens.key.ctrl+right",
    "when": "gitlens:key:ctrl+right"
  },
  {
    "key": "alt+,",
    "command": "-gitlens.key.alt+,",
    "when": "gitlens:key:,"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.key.alt+.",
    "when": "gitlens:key:."
  },
  {
    "key": "alt+enter",
    "command": "-gitlens.key.alt+enter",
    "when": "gitlens:key:alt+enter"
  },
  {
    "key": "ctrl+enter",
    "command": "-gitlens.key.ctrl+enter",
    "when": "gitlens:key:ctrl+enter"
  },
  {
    "key": "escape",
    "command": "-gitlens.key.escape",
    "when": "editorTextFocus && gitlens:key:escape && !codeActionMenuVisible && !findWidgetVisible && !isInEmbeddedEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible"
  },
  {
    "key": "alt+/",
    "command": "-gitlens.gitCommands",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "ctrl+shift+g /",
    "command": "-gitlens.gitCommands",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:blameable'"
  },
  {
    "key": "ctrl+shift+g b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:blameable'"
  },
  {
    "key": "shift+alt+b",
    "command": "-gitlens.toggleCodeLens",
    "when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "ctrl+shift+g shift+b",
    "command": "-gitlens.toggleCodeLens",
    "when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+h",
    "command": "-gitlens.showQuickFileHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "ctrl+shift+g h",
    "command": "-gitlens.showQuickFileHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "shift+alt+h",
    "command": "-gitlens.showQuickRepoHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "ctrl+shift+g shift+h",
    "command": "-gitlens.showQuickRepoHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+s",
    "command": "-gitlens.showQuickRepoStatus",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "ctrl+shift+g s",
    "command": "-gitlens.showQuickRepoStatus",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+c",
    "command": "-gitlens.showQuickCommitFileDetails",
    "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "ctrl+shift+g c",
    "command": "-gitlens.showQuickCommitFileDetails",
    "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+,",
    "command": "-gitlens.diffWithPrevious",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+g ,",
    "command": "-gitlens.diffWithPrevious",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "alt+,",
    "command": "-gitlens.diffWithPreviousInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+g ,",
    "command": "-gitlens.diffWithPreviousInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "alt+,",
    "command": "-gitlens.diffWithPreviousInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+g ,",
    "command": "-gitlens.diffWithPreviousInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.diffWithNext",
    "when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+g .",
    "command": "-gitlens.diffWithNext",
    "when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.diffWithNextInDiffLeft",
    "when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+g .",
    "command": "-gitlens.diffWithNextInDiffLeft",
    "when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.diffWithNextInDiffRight",
    "when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+g .",
    "command": "-gitlens.diffWithNextInDiffRight",
    "when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "shift+alt+[IntlBackslash]",
    "command": "-gitlens.diffWithWorking",
    "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "shift+alt+.",
    "command": "-gitlens.diffWithWorking",
    "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+g shift+[IntlBackslash]",
    "command": "-gitlens.diffWithWorking",
    "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "ctrl+shift+g shift+.",
    "command": "-gitlens.diffWithWorking",
    "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "alt+[IntlBackslash]",
    "command": "-gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "shift+alt+,",
    "command": "-gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+g [IntlBackslash]",
    "command": "-gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+g shift+,",
    "command": "-gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'"
  },
  {
    "key": "ctrl+shift+g g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.branches.copy",
    "when": "focusedView == 'gitlens.views.branches'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.commits.copy",
    "when": "focusedView == 'gitlens.views.commits'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.contributors.copy",
    "when": "focusedView == 'gitlens.views.contributors'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.drafts.copy",
    "when": "focusedView == 'gitlens.views.drafts'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.fileHistory.copy",
    "when": "focusedView == 'gitlens.views.fileHistory'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.lineHistory.copy",
    "when": "focusedView == 'gitlens.views.lineHistory'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.pullRequest.copy",
    "when": "focusedView == 'gitlens.views.pullRequest'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.remotes.copy",
    "when": "focusedView == 'gitlens.views.remotes'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.repositories.copy",
    "when": "focusedView == 'gitlens.views.repositories'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.stashes.copy",
    "when": "focusedView == 'gitlens.views.stashes'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.searchAndCompare.copy",
    "when": "focusedView == 'gitlens.views.searchAndCompare'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.tags.copy",
    "when": "focusedView == 'gitlens.views.tags'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.worktrees.copy",
    "when": "focusedView == 'gitlens.views.worktrees'"
  },
  {
    "key": "ctrl+c",
    "command": "-gitlens.views.workspaces.copy",
    "when": "focusedView == 'gitlens.views.workspaces'"
  },
  {
    "key": "1",
    "command": "-gitlens.views.scm.grouped.commits",
    "when": "config.gitlens.views.scm.grouped.views.commits && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
  },
  {
    "key": "2",
    "command": "-gitlens.views.scm.grouped.branches",
    "when": "config.gitlens.views.scm.grouped.views.branches && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
  },
  {
    "key": "3",
    "command": "-gitlens.views.scm.grouped.remotes",
    "when": "config.gitlens.views.scm.grouped.views.remotes && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
  },
  {
    "key": "4",
    "command": "-gitlens.views.scm.grouped.stashes",
    "when": "config.gitlens.views.scm.grouped.views.stashes && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
  },
  {
    "key": "5",
    "command": "-gitlens.views.scm.grouped.tags",
    "when": "config.gitlens.views.scm.grouped.views.tags && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
  },
  {
    "key": "6",
    "command": "-gitlens.views.scm.grouped.worktrees",
    "when": "config.gitlens.views.scm.grouped.views.worktrees && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
  },
  {
    "key": "7",
    "command": "-gitlens.views.scm.grouped.contributors",
    "when": "config.gitlens.views.scm.grouped.views.contributors && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
  },
  {
    "key": "8",
    "command": "-gitlens.views.scm.grouped.repositories",
    "when": "config.gitlens.views.scm.grouped.views.repositories && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
  },
  {
    "key": "9",
    "command": "-gitlens.views.scm.grouped.searchAndCompare",
    "when": "config.gitlens.views.scm.grouped.views.searchAndCompare && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
  },
  {
    "key": "0",
    "command": "-gitlens.views.scm.grouped.launchpad",
    "when": "config.gitlens.views.scm.grouped.views.launchpad && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'"
  }
]

mapping:
  - id: "acceptRenameInput"
    binding:
      - "enter"
    vscode:
      action: 'acceptRenameInput'
      context: [ "editorFocus && renameInputVisible && !isComposing" ]
    idea:
      missing: true
  - id: "acceptRenameInputWithPreview"
    binding:
      - "ctrl+enter"
    vscode:
      action: 'acceptRenameInputWithPreview'
      context: [ "config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing" ]
    idea:
      missing: true
  - id: "acceptSelectedSuggestion"
    binding:
      - "enter"
    vscode:
      action: 'acceptSelectedSuggestion'
      context: [ "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus" ]
    idea:
      missing: true
  - id: "cancelRenameInput"
    binding:
      - "escape"
    vscode:
      action: 'cancelRenameInput'
      context: [ "editorFocus && renameInputVisible" ]
    idea:
      missing: true
  - id: "cancelSelection"
    binding:
      - "escape"
    vscode:
      action: 'cancelSelection'
      context: [ "editorHasSelection && textInputFocus" ]
    idea:
      missing: true
  - id: "closeBreakpointWidget"
    binding:
      - "escape"
    vscode:
      action: 'closeBreakpointWidget'
      context: [ "breakpointWidgetVisible && textInputFocus" ]
    idea:
      missing: true
  - id: "closeFindWidget"
    binding:
      - "escape"
    vscode:
      action: 'closeFindWidget'
      context: [ "editorFocus && findWidgetVisible && !isComposing" ]
    idea:
      missing: true
  - id: "closeMarkersNavigation"
    binding:
      - "escape"
    vscode:
      action: 'closeMarkersNavigation'
      context: [ "editorFocus && markersNavigationVisible" ]
    idea:
      missing: true
  - id: "closeParameterHints"
    binding:
      - "escape"
    vscode:
      action: 'closeParameterHints'
      context: [ "editorFocus && parameterHintsVisible" ]
    idea:
      missing: true
  - id: "closeReferenceSearch"
    binding:
      - "escape"
    vscode:
      action: 'closeReferenceSearch'
      context: [ "editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus" ]
    idea:
      missing: true
  - id: "editor.action.cancelSelectionAnchor"
    binding:
      - "escape"
    vscode:
      action: 'editor.action.cancelSelectionAnchor'
      context: [ "editorTextFocus && selectionAnchorSet" ]
    idea:
      missing: true
  - id: "editor.action.extensioneditor.findNext"
    binding:
      - "enter"
    vscode:
      action: 'editor.action.extensioneditor.findNext'
      context: [ "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'" ]
    idea:
      missing: true
  - id: "editor.action.extensioneditor.findPrevious"
    binding:
      - "shift+enter"
    vscode:
      action: 'editor.action.extensioneditor.findPrevious'
      context: [ "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'" ]
    idea:
      missing: true
  - id: "editor.action.extensioneditor.showfind"
    binding:
      - "ctrl+[KeyF]"
    vscode:
      action: 'editor.action.extensioneditor.showfind'
      context: [ "!editorFocus && activeEditor == 'workbench.editor.extension'" ]
    idea:
      missing: true
  - id: "focusSuggestion"
    binding:
      - "ctrl+space"
    vscode:
      action: 'focusSuggestion'
      context: [ "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion" ]
    idea:
      missing: true
  - id: "hideSuggestWidget"
    binding:
      - "escape"
    vscode:
      action: 'hideSuggestWidget'
      context: [ "suggestWidgetVisible && textInputFocus" ]
    idea:
      missing: true
      
  - id: "jumpToNextSnippetPlaceholder"
    binding:
      - "tab"
      - "enter"
    vscode:
      action: 'jumpToNextSnippetPlaceholder'
      context: [ "hasNextTabstop && inSnippetMode && textInputFocus" ]
    idea:
      action: 'NextTemplateVariable'
      
      
  - id: "jumpToPrevSnippetPlaceholder"
    binding:
      - "shift+tab"
    vscode:
      action: 'jumpToPrevSnippetPlaceholder'
      context: [ "hasPrevTabstop && inSnippetMode && textInputFocus" ]
    idea:
      missing: true
  - id: "leaveSnippet"
    binding:
      - "escape"
      - "shift+escape"
    vscode:
      action: 'leaveSnippet'
      context: [ "inSnippetMode && textInputFocus" ]
    idea:
      missing: true      
  - id: "repl.action.acceptInput"
    binding:
      - "enter"
    vscode:
      action: 'repl.action.acceptInput'
      context: [ "inDebugRepl && textInputFocus" ]
    idea:
      missing: true
  - id: "repl.action.filter"
    binding:
      - "ctrl+[KeyF]"
    vscode:
      action: 'repl.action.filter'
      context: [ "inDebugRepl && textInputFocus" ]
    idea:
      missing: true
  - id: "selectNextPageSuggestion"
    binding:
      - "pagedown"
    vscode:
      action: 'selectNextPageSuggestion'
      context: [ "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion" ]
    idea:
      missing: true
  - id: "selectNextSuggestion"
    binding:
      - "down"
    vscode:
      action: 'selectNextSuggestion'
      context: [ "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion" ]
  #    idea:
  #      action: 'EditorLookupDown'
    idea:
      missing: true
  - id: "selectPrevSuggestion"
    binding:
      - "up"
    vscode:
      action: 'selectPrevSuggestion'
      context: [ "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion" ]
      #    idea:
      #      action: 'EditorLookupUp'
    idea:
      missing: true
  - id: "selectPrevPageSuggestion"
    binding:
      - "pageup"
    vscode:
      action: 'selectPrevPageSuggestion'
      context: [ "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion" ]
    idea:
      missing: true
  - id: "showNextParameterHint"
    binding:
      - "down"
    vscode:
      action: 'showNextParameterHint'
      context: [ "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible" ]
    idea:
      missing: true
  - id: "showPrevParameterHint"
    binding:
      - "up"
    vscode:
      action: 'showPrevParameterHint'
      context: [ "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible" ]
    idea:
      missing: true
  - id: "toggleSuggestionDetails"
    binding:
      - "ctrl+space"
    vscode:
      action: 'toggleSuggestionDetails'
      context: [ "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus" ]
    idea:
      missing: true
  - id: "widgetNavigation.focusNext"
    binding:
      - "ctrl+down"
    vscode:
      action: 'widgetNavigation.focusNext'
      context: [ "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'" ]
    idea:
      missing: true
  - id: "widgetNavigation.focusPrevious"
    binding:
      - "ctrl+up"
    vscode:
      action: 'widgetNavigation.focusPrevious'
      context: [ "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top'" ]
    idea:
      missing: true    